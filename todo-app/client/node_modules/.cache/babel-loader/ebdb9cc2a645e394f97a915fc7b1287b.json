{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cagdas Aydemir\\\\Desktop\\\\LEARN-MERN\\\\client\\\\src\\\\components\\\\List.js\";\nimport React from \"react\";\nimport { ListGroup, Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = _ref => {\n  let {\n    todoList,\n    getTodoList\n  } = _ref;\n  const completeTask = taskId => {\n    fetch(\"http://localhost:8000/todo\" + taskId, {\n      method: \"PATCH\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title: titleInput.value\n      })\n    }).then(res => {\n      console.log(res);\n      getTodoList();\n      titleInput.value = \"\";\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    defaultActiveKey: \"#link1\",\n    children: todoList === null || todoList === void 0 ? void 0 : todoList.map(todo => {\n      return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        className: \"d-flex\",\n        active: todo.isCompleted,\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          className: \"me-3\",\n          checked: todo.isCompleted,\n          type: \"checkbox\",\n          id: `default`,\n          onChange: () => {\n            completeTask(todo._id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), todo.title, /*#__PURE__*/_jsxDEV(Button, {\n          className: \"ms-auto\",\n          variant: \"danger\",\n          size: \"sm\",\n          children: \"Sil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","ListGroup","Form","Button","List","todoList","getTodoList","completeTask","taskId","fetch","method","headers","Accept","body","JSON","stringify","title","titleInput","value","then","res","console","log","catch","err","map","todo","isCompleted","_id"],"sources":["C:/Users/Cagdas Aydemir/Desktop/LEARN-MERN/client/src/components/List.js"],"sourcesContent":["import React from \"react\";\r\nimport { ListGroup, Form, Button } from \"react-bootstrap\";\r\n\r\nconst List = ({ todoList, getTodoList }) => {\r\n  const completeTask = (taskId) =>{\r\n    fetch(\"http://localhost:8000/todo\"+taskId, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        title: titleInput.value,\r\n      }),\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        getTodoList();\r\n        titleInput.value = \"\";\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <ListGroup defaultActiveKey=\"#link1\">\r\n      {todoList?.map((todo) => {\r\n        return (\r\n          <ListGroup.Item className=\"d-flex\" active={todo.isCompleted}>\r\n            <Form.Check\r\n              className=\"me-3\"\r\n              checked={todo.isCompleted}\r\n              type=\"checkbox\"\r\n              id={`default`}\r\n              onChange={()=>{\r\n                completeTask(todo._id);\r\n              }\r\n              }\r\n            />\r\n            {todo.title}\r\n            <Button className=\"ms-auto\" variant=\"danger\" size=\"sm\">\r\n              Sil\r\n            </Button>\r\n          </ListGroup.Item>\r\n        );\r\n      })}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAAC;AAE1D,MAAMC,IAAI,GAAG,QAA+B;EAAA,IAA9B;IAAEC,QAAQ;IAAEC;EAAY,CAAC;EACrC,MAAMC,YAAY,GAAIC,MAAM,IAAI;IAC9BC,KAAK,CAAC,4BAA4B,GAACD,MAAM,EAAE;MACzCE,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAEC,UAAU,CAACC;MACpB,CAAC;IACH,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBd,WAAW,EAAE;MACbW,UAAU,CAACC,KAAK,GAAG,EAAE;IACvB,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAK;MACdH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IAClB,CAAC,CAAC;EACN,CAAC;EAED,oBACE,QAAC,SAAS;IAAC,gBAAgB,EAAC,QAAQ;IAAA,UACjCnB,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEoB,GAAG,CAAEC,IAAI,IAAK;MACvB,oBACE,QAAC,SAAS,CAAC,IAAI;QAAC,SAAS,EAAC,QAAQ;QAAC,MAAM,EAAEA,IAAI,CAACC,WAAY;QAAA,wBAC1D,QAAC,IAAI,CAAC,KAAK;UACT,SAAS,EAAC,MAAM;UAChB,OAAO,EAAED,IAAI,CAACC,WAAY;UAC1B,IAAI,EAAC,UAAU;UACf,EAAE,EAAG,SAAS;UACd,QAAQ,EAAE,MAAI;YACZpB,YAAY,CAACmB,IAAI,CAACE,GAAG,CAAC;UACxB;QACC;UAAA;UAAA;UAAA;QAAA,QACD,EACDF,IAAI,CAACV,KAAK,eACX,QAAC,MAAM;UAAC,SAAS,EAAC,SAAS;UAAC,OAAO,EAAC,QAAQ;UAAC,IAAI,EAAC,IAAI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAE7C;MAAA;QAAA;QAAA;QAAA;MAAA,QACM;IAErB,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACQ;AAEhB,CAAC;AAAC,KA9CIZ,IAAI;AAgDV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}